Crie um diagrama do Modelo Relacional para uma Clínica Veterinária:
a. Entidades: Usuario, Usuario_Foto, Especialidade, Veterinario, Tutor, Animal, Status_Agendamento, Agendamento, Horario_Funcionamento, Carga_Horaria, Horario_Ocupado
b. Atributos: Usuario (id_usuario SERIAL PRIMARY KEY,  -- id serial automatico
    email VARCHAR(50) UNIQUE NOT NULL,  -- Unique para evitar emails iguais
    nome VARCHAR(90) NOT NULL,
    senha VARCHAR(64) NOT NULL,
    cargo VARCHAR(3) CHECK (cargo IN ('vet', 'sec', 'adm')) NOT NULL  -- Restricao CHECK para aceitar valores especificos), Usuario_Foto (id_usuario INT PRIMARY KEY REFERENCES Usuario(id_usuario) ON DELETE CASCADE,
    foto bytea NOT NULL), Especialidade (id_especialidade SERIAL PRIMARY KEY,
    nome VARCHAR(50) NOT NULL UNIQUE), Veterinario (d_veterinario INT PRIMARY KEY REFERENCES Usuario(id_usuario) ON DELETE CASCADE,  -- Herda ID de Usuario
    id_especialidade INT NOT NULL REFERENCES Especialidade(id_especialidade)
    -- Especialidade obrigatoria, nao eh PK porque cada veterinario tem apenas uma especialidade e ela eh obrigatoria), Tutor (id_tutor SERIAL PRIMARY KEY,
    cpf CHAR(14) UNIQUE NOT NULL CHECK ( cpf ~ '^\d{3}\.\d{3}\.\d{3}-\d{2}$' ), -- Restricao CHECK para CPF
    nome VARCHAR(100) NOT NULL,
    data_nascimento DATE NOT NULL,
    telefone VARCHAR(15) NOT NULL,
    endereco VARCHAR(200) NOT NULL), Animal (id_animal SERIAL PRIMARY KEY,
    id_tutor INT NOT NULL,
    nome VARCHAR(100) NOT NULL,
    especie VARCHAR(50) NOT NULL,
    raca VARCHAR(50) NOT NULL,
    nascimento DATE NOT NULL,
    sexo CHAR(1) CHECK (sexo IN ('F', 'M')) NOT NULL, -- CHAR porque tem obrigatoriamente um unico caractere
    peso NUMERIC(5,2) NOT NULL,
    cor VARCHAR(50) NOT NULL,
    CONSTRAINT fk_tutor FOREIGN KEY (id_tutor) REFERENCES Tutor(id_tutor) ON DELETE CASCADE), Status_Agendamento (id_status SERIAL PRIMARY KEY,
    nome VARCHAR(50) NOT NULL UNIQUE), Agendamento (id_agendamento SERIAL PRIMARY KEY,
    id_animal INT NOT NULL,
    id_status INT NOT NULL DEFAULT 1,
    id_veterinario INT NOT NULL,
    data DATE NOT NULL,
    horario CHAR(5) NOT NULL, --
    CONSTRAINT fk_animal FOREIGN KEY (id_animal) REFERENCES Animal(id_animal) ON DELETE CASCADE,
    CONSTRAINT fk_status FOREIGN KEY (id_status) REFERENCES Status_Agendamento(id_status),
    CONSTRAINT fk_veterinario FOREIGN KEY (id_veterinario) REFERENCES Veterinario(id_veterinario) ON DELETE CASCADE), Horario_Funcionamento (id_horario SERIAL PRIMARY KEY,
    horario CHAR(5) NOT NULL,
    turno CHAR(5) CHECK (turno IN ('manha', 'tarde')) NOT NULL), Carga_Horaria (id_veterinario INT NOT NULL,
       turno CHAR(5) CHECK (turno IN ('manha', 'tarde')) NOT NULL,
        PRIMARY KEY (id_veterinario, turno),
        FOREIGN KEY (id_veterinario) REFERENCES veterinario(id_veterinario) ON DELETE CASCADE), Horario_Ocupado (id_veterinario INT NOT NULL,
    id_agendamento INT NOT NULL,
    data DATE NOT NULL,
    horario CHAR(5) NOT NULL,
    PRIMARY KEY (id_veterinario, id_agendamento),
    FOREIGN KEY (id_veterinario) REFERENCES veterinario(id_veterinario) ON DELETE CASCADE,
    FOREIGN KEY (id_agendamento) REFERENCES agendamento(id_agendamento) ON DELETE CASCADE)
    c. Relacionamentos:
    - Usuario para Usuario_Foto (1,1) e Usuario_Foto para Usuario (1,1)
    - Usuario para Veterinario (1,N) e Veterinario para Usuario (1,1)
    - Veterinario para Especialidade (1,1) e Especialidade para Veterinario (1, N)
    - Veterinario para Carga_Horaria (1,N) e Carga_Horaria para Veterinario (1,N)
    - Veterinario para Agendamento (1,N) e Agendamento para Veterinario (1,1)
    - Animal para Agendamento (1,N) e Agendamento para Animal (1,1)
    - Animal para Tutor (1,1) e Tutor para Animal (1,N)
    - Agendamento para Status_Agendamento (1,1) e Status_Agendamento para Agendamento (1,N)
    - Agendamento para Horario_Ocupado (1,1) e Horario_Ocupado para Agendamento (1,N)