import psycopg2
from psycopg2 import sql

class Animal:
    def __init__(self, id_animal=None, id_tutor=None, nome=None, especie=None, raca=None, ano_nascimento=None, sexo=None, peso=None, cor=None):
        self.id_animal = id_animal
        self.id_tutor = id_tutor
        self.nome = nome
        self.especie = especie
        self.raca = raca
        self.ano_nascimento = ano_nascimento
        self.sexo = sexo
        self.peso = peso
        self.cor = cor

    def conectar_banco(self):
        try:
            self.conn = psycopg2.connect(
                dbname="seu_banco_de_dados",
                user="seu_usuario",
                password="sua_senha",
                host="localhost",
                port="5432"
            )
            self.cur = self.conn.cursor()
        except Exception as e:
            print(f"Erro ao conectar ao banco de dados: {e}")

    def desconectar_banco(self):
        if self.cur:
            self.cur.close()
        if self.conn:
            self.conn.close()

    def inserir_animal(self):
        self.conectar_banco()
        try:
            query = sql.SQL("""
                INSERT INTO Animais (ID_Tutor, Nome, Especie, Raca, Ano_Nascimento, Sexo, Peso, Cor)
                VALUES (%s, %s, %s, %s, %s, %s, %s, %s)
                RETURNING ID_Animal
            """)
            self.cur.execute(query, (self.id_tutor, self.nome, self.especie, self.raca, self.ano_nascimento, self.sexo, self.peso, self.cor))
            self.id_animal = self.cur.fetchone()[0]
            self.conn.commit()
            print(f"Animal inserido com ID: {self.id_animal}")
        except Exception as e:
            print(f"Erro ao inserir animal: {e}")
        finally:
            self.desconectar_banco()

    def recuperar_animal(self, id_animal):
        self.conectar_banco()
        try:
            query = sql.SQL("""
                SELECT * FROM Animais WHERE ID_Animal = %s
            """)
            self.cur.execute(query, (id_animal,))
            resultado = self.cur.fetchone()
            if resultado:
                self.id_animal, self.id_tutor, self.nome, self.especie, self.raca, self.ano_nascimento, self.sexo, self.peso, self.cor = resultado
                print(f"Animal recuperado: {self.__dict__}")
            else:
                print("Animal não encontrado.")
        except Exception as e:
            print(f"Erro ao recuperar animal: {e}")
        finally:
            self.desconectar_banco()

    def atualizar_animal(self):
        self.conectar_banco()
        try:
            query = sql.SQL("""
                UPDATE Animais
                SET ID_Tutor = %s, Nome = %s, Especie = %s, Raca = %s, Ano_Nascimento = %s, Sexo = %s, Peso = %s, Cor = %s
                WHERE ID_Animal = %s
            """)
            self.cur.execute(query, (self.id_tutor, self.nome, self.especie, self.raca, self.ano_nascimento, self.sexo, self.peso, self.cor, self.id_animal))
            self.conn.commit()
            print(f"Animal com ID {self.id_animal} atualizado.")
        except Exception as e:
            print(f"Erro ao atualizar animal: {e}")
        finally:
            self.desconectar_banco()

    def excluir_animal(self, id_animal):
        self.conectar_banco()
        try:
            query = sql.SQL("""
                DELETE FROM Animais WHERE ID_Animal = %s
            """)
            self.cur.execute(query, (id_animal,))
            self.conn.commit()
            print(f"Animal com ID {id_animal} excluído.")
        except Exception as e:
            print(f"Erro ao excluir animal: {e}")
        finally:
            self.desconectar_banco()

# Exemplo de uso
if __name__ == "__main__":
    # Inserir um novo animal
    novo_animal = Animal(
        id_tutor=1,
        nome="Rex",
        especie="Cachorro",
        raca="Labrador",
        ano_nascimento=2018,
        sexo="M",
        peso=30.5,
        cor="Preto"
    )
    novo_animal.inserir_animal()

    # Recuperar um animal pelo ID
    animal = Animal()
    animal.recuperar_animal(1)

    # Atualizar um animal
    animal.nome = "Rex Updated"
    animal.atualizar_animal()

    # Excluir um animal
    animal.excluir_animal(1)